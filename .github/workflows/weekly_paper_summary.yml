# 워크플로우의 이름
name: Weekly Paper Summary

# 워크플로우가 실행될 조건
on:
  schedule:
    # 매주 월요일 오전 8시(KST)에 실행
    # GitHub Actions는 UTC 기준이므로, KST(UTC+9)에 맞추려면 일요일 23시로 설정
    - cron: '0 23 * * 0'
  # 수동으로 실행할 수 있도록 workflow_dispatch 추가
  workflow_dispatch:

# 실행될 작업(Job) 정의
jobs:
  scrape-and-translate:
    # 작업이 실행될 가상 환경
    runs-on: ubuntu-latest

    # 작업의 단계(Step)들
    steps:
      # 1. 리포지토리의 코드를 가상 환경으로 가져옴
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 파이썬 환경 설정
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # 3. uv 설치 (공식 Action 사용)
      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      # 4. uv를 사용하여 라이브러리 설치
      - name: Install dependencies with uv
        # [수정됨] --system 옵션을 추가하여 가상 환경 없이 설치
        run: uv pip install --system -r requirements.txt

      # 5. uv run으로 파이썬 스크립트 실행
      - name: Run the scraper script with uv
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: uv run python your_script_name.py # "your_script_name.py"을 실제 파일 이름으로 변경하세요.

      # 6. 변경된 결과(생성된 .txt 파일)를 리포지토리에 커밋
      - name: Commit and push if it changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          # 변경 사항이 있을 때만 커밋하도록 설정
          git diff --staged --quiet || git commit -m "Update weekly paper summary"
          git push
